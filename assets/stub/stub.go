package stub

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _stub_controller_controller_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5b\x6f\xdb\x36\x14\x7e\x96\x7e\x05\x27\x60\x06\x55\x78\xf2\xda\x0d\x7b\xf0\x6c\x03\xad\xd3\x0c\xc1\xda\x35\x48\xb6\xf5\x21\x08\x0c\x5a\x3c\x96\xd9\x4a\xa4\x43\x1e\x65\x68\x0b\xff\xf7\x81\x17\xd9\x8a\x9d\x4b\xdd\x2e\x85\xbb\x46\x0f\xb6\x78\xc8\x73\x23\xcf\xf7\x1d\x49\x0b\x96\xbf\x65\x05\x90\xc1\x20\xdc\x4d\x24\xab\x60\x34\x8a\x63\x51\x2d\x94\x46\x42\xe3\x28\x01\x99\x2b\x2e\x64\xd1\x7b\x63\x94\x4c\xe2\x28\x19\x0c\xfc\xec\xa4\x52\x1c\xca\xd1\xe8\x8a\x4c\x83\x59\x28\x69\xc0\x8b\x85\xea\x09\x55\xa3\x28\xed\xa0\x54\x85\xfd\x93\x80\xbd\x39\xe2\xc2\xde\x57\x0c\xe7\xf6\xdf\xa0\xce\x95\xbc\x4c\xe2\x38\x4a\x0a\x81\xf3\x7a\x9a\xe5\xaa\xea\xbd\x11\xf2\xfd\xbc\xee\x15\x4a\x57\x76\xd5\xac\xc2\x24\x4e\xe3\x78\x56\xcb\x9c\xbc\x10\x06\x29\x9f\x92\x47\x76\x36\x3b\x78\x96\x12\x2b\xa6\xff\x68\x81\xa0\x89\x75\x90\x9d\x84\x58\x5e\x3b\x59\x97\x68\xb8\xa8\xc1\x20\x79\x14\x66\xdd\x28\x25\x1f\xe2\x48\x03\xd6\x5a\x7e\x8e\x85\x88\xc3\x0c\xb4\xb7\xe0\x05\x91\x98\x11\xd0\x9a\xf4\x87\x44\x43\xae\x2e\x41\xd3\xf4\x57\x27\xf9\x6e\x48\xa4\x28\xfd\xa2\xa8\x32\x45\x97\x4c\xec\x2a\xbb\xbf\xd9\x4b\xa6\xcd\x9c\x95\xb4\xd9\xc7\xec\x04\xd0\x2f\x8c\xc6\x8a\x43\xdf\xc7\x75\x8a\x0c\x6b\x73\x24\x11\xb4\x64\xe5\x29\xe8\x4b\xd0\xcf\xb5\x56\xba\xeb\x97\xbe\x34\x45\x9f\x90\x59\x85\xd9\xe9\x42\x0b\x89\x33\x9a\x7c\x7f\x99\x74\xad\xf7\xd4\x2f\x59\xa6\xee\xcf\x27\x9b\xb9\xfc\x68\x65\x0a\x27\x5d\xc6\x51\xb4\xa4\x69\x1c\x47\x51\xaf\x47\x7e\x03\x24\x0b\x56\x40\x1c\x45\xab\x74\x5c\xde\xd9\x31\xd3\x06\x0e\x95\xae\xa8\x55\x0b\xe9\xb6\x93\x5b\x30\x29\x72\x0a\x5a\x67\x2e\x38\x9a\xda\x75\x4b\x6b\xd7\x1a\x6c\x9b\xb2\x56\xfe\x66\x65\x0d\x34\xb1\x53\x49\x30\xe8\x96\x0d\x87\x24\x49\x1a\x83\x76\x4c\x92\xc7\x49\xdb\xd0\x91\xc4\x6e\xb3\xd5\xa1\x92\xb2\xa7\xa8\x04\xb5\x93\x3b\x87\x16\x52\x36\xc0\x74\x3e\x9f\x70\x86\x2c\x8e\xa2\xa9\xe2\xef\x56\x3e\x7c\x49\x67\x27\xc0\xf8\xd3\xd2\x1e\x95\xcf\xe1\x99\xe2\xef\x76\xf6\x36\x13\x25\x82\x36\xd6\x6c\x67\x30\x70\x88\x9a\x18\xd4\x75\x8e\xa3\xd1\x87\x65\xd8\xf3\x50\x1b\x7f\xc9\x2a\x54\x87\x0f\xa7\x13\x94\x3f\x35\x45\x54\xc8\x4a\x22\xeb\xca\xc4\x51\xe4\x06\x7f\xd4\x95\x0b\xe5\xc7\xb0\xb3\xa7\xe2\xbd\x3b\xa6\x27\x56\x80\x6c\x5a\xba\xd1\xd9\xf9\xb5\x91\xf2\x69\xf6\x7a\x0e\x1a\x68\x13\x56\x76\x28\x24\xa7\x1d\xa7\x97\x66\x63\x55\x4b\xa4\x9d\x95\x9f\xa6\xbe\xc6\xaa\x5a\xd4\x08\x3e\x9a\x89\xf5\xba\x0a\xe7\xd8\x0e\xac\x47\xcb\x13\xd9\x18\x44\x49\x67\xa5\x62\xf8\xcb\xcf\x74\x6d\x86\xf4\x48\x23\x6c\x42\x4e\xdb\xb5\x6b\xc1\xa7\xb9\xb5\x19\xee\x6e\x49\xa1\xd7\xbb\x29\x89\xa0\x9b\x5e\x9b\xe7\x0b\x51\x09\x5c\x7b\xcf\x5e\xcd\x66\x06\x90\xd2\x50\x9c\x3f\x3c\x4e\x1f\xb5\x26\x35\x07\x4d\x93\x5c\x03\x43\xe0\x13\x86\x84\x83\xc9\x93\x2d\x47\x2e\x60\xf4\x20\xd9\xe0\x82\x2d\x26\x78\xf5\xbb\x43\xf5\x01\x43\xd6\x5f\x2f\xb7\x14\xe9\xb9\xc3\xde\xf5\x49\x63\xdb\x33\xc0\x31\x2b\x84\x64\x28\x94\x6c\xa9\xac\x85\x81\x74\x8e\x43\xdc\x7d\x42\x08\x69\x92\x08\x2c\xf3\x67\x73\x06\x76\x72\x75\x20\xed\x49\x77\x80\x7d\x42\x84\x44\xba\x3e\xd1\x40\x41\xd1\xb8\xd6\x1a\x24\x5a\x59\x9f\x34\x40\xf6\xec\xe4\xfe\xdc\xaf\x2b\x58\xbe\xc2\xde\x15\x92\xec\x68\xc0\x9d\x8b\x7f\xe2\x6d\x0d\xc9\x15\xee\xe3\xbb\xd9\x89\x96\xf1\x32\x34\xa2\x03\x28\xc1\x1a\xd8\x97\x56\x14\x47\xf6\xa8\x36\xda\x11\x69\x5d\x77\xf7\x25\xb2\x71\x7d\x54\x8f\xda\x54\xb2\xd7\xc7\xb5\xac\xeb\x34\x6f\xef\x60\x9b\xab\x97\xe9\x96\x68\xbb\xb3\x5d\x51\x58\x8d\x42\xa3\xfb\x4c\x82\x2f\x55\x91\x1d\x6f\xc6\x69\x27\xfc\x71\xae\xea\x98\x21\xf3\x7c\xf6\x16\x68\xc5\x16\x67\x06\xb5\x90\xc5\xb9\x90\xf8\xd3\x93\xf4\x0e\xb6\xb7\xca\x3b\x57\xbb\xb9\x28\xad\xc3\x2d\xb6\xb3\x5a\x47\xbc\x4f\xac\xd1\xb3\x44\xf0\xe4\x7c\x0d\xb6\x69\x16\x6a\xba\x63\x2e\xca\x9b\x89\xe8\xd6\x83\xb6\x8c\xb4\x7d\x9e\x89\xa9\xf3\x1c\x8c\x49\xd6\x93\x7b\x8f\xef\xb1\x23\xea\xfd\xc1\xf7\x03\xbc\xbf\x3c\xbc\x6f\xae\xb6\x06\xd1\x3b\x3f\xbb\x7d\x12\x9a\xf9\x34\x0b\xe5\x18\xf4\xbf\x71\x6c\x3e\xe7\x62\x9f\x5e\x02\x1f\x90\xf9\xcd\x22\xb3\x5e\x70\x86\x70\x10\x7c\x5e\xe7\xb4\xc9\x9b\x4f\xb3\x43\xa1\x0d\xd2\xce\x5a\xa7\xeb\xfa\x70\x76\xc4\xd7\x9b\xd5\x32\x38\x74\xb3\x6d\x03\xa7\xec\x12\xda\xfa\xf7\x4d\x04\xf6\xf2\x2f\x17\x6e\x77\xbe\x22\x86\x38\x00\x64\xa2\x7c\xe0\x88\x6b\xae\xaf\x84\x23\xee\x91\x22\xae\x3c\xb5\x9b\xa4\x4b\xa6\xce\x8a\xfb\xf8\xa1\x59\x65\x6e\x78\x54\xbf\xeb\x41\xdd\x2b\xff\x97\x84\xe5\x5b\x7f\xa0\x0d\x87\x40\xe2\x9d\xf8\x47\xf7\x07\xf8\xdf\x04\xff\x67\x0c\xf3\xf9\xfe\xbd\xa1\xff\x4f\xbf\x16\x7f\xd9\x97\xe8\x33\xff\xda\x7c\x3f\xfd\x7c\xa6\x34\x99\x74\x05\x77\x07\xc2\x64\x01\xae\x07\x3b\xa5\xd5\xf7\xbf\x2d\xa0\x1e\xf1\xbe\xe0\xcb\xb4\x79\x7d\xde\x06\xf2\xca\xfc\xae\x5f\xf6\xb6\xa0\xb9\xcf\x1f\xc6\xfe\x0d\x00\x00\xff\xff\x0c\x72\x52\x40\x57\x1a\x00\x00")

func stub_controller_controller_stub() ([]byte, error) {
	return bindata_read(
		_stub_controller_controller_stub,
		"stub/controller/controller.stub",
	)
}

var _stub_core_core_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x8f\x1c\x35\x13\x3e\xb7\x7f\x45\xbd\x96\x36\xea\xde\x4c\xba\x5f\xc2\x87\xa2\x51\x26\x24\x64\x93\x00\xda\x88\x65\x37\x90\x43\x3e\xdd\xdd\x35\x3d\x0e\xdd\xf6\xc4\x76\x6f\x34\x44\x7b\x41\x48\x80\x84\x80\x4b\x10\x12\x12\x42\xe2\xc0\x09\xc8\x09\x21\x05\xf8\x35\xd9\x85\x1b\x7f\x01\x95\xdd\x3d\x3b\xc3\xce\x92\x30\x17\xb7\x5d\xae\xe7\x29\xd7\x53\x76\xcd\x54\x14\xef\x89\x0a\xa1\xd0\x06\x19\x93\xcd\x54\x1b\x07\x31\x8b\xb8\xd4\x99\xd4\xad\x93\x35\x67\x11\x57\xe8\xb2\x89\x73\x53\xfa\x1e\x37\x8e\x86\x5a\x57\x34\x58\x67\x0a\xad\x76\xbb\x4f\xa9\x2a\xcb\x19\x8b\xf8\xd9\xb3\x01\xea\x8e\xd1\xad\xc3\x73\xe7\x68\xf1\x0e\xf0\x4a\xba\x49\x9b\xa7\x85\x6e\xb2\x4a\x9f\xb2\xf7\xeb\x53\xa5\x91\xbb\x68\xb2\x66\x66\xef\x7b\xa6\x85\x1d\xf7\xa4\x7a\x7f\xd2\x66\x95\x36\x0d\x67\x09\x63\x6e\x36\x45\xd8\x46\x3b\xd5\xca\xe2\x36\x3a\xb0\xce\xb4\x85\x83\x87\x2c\xba\xa8\x4b\x04\xa9\x1c\xf4\xbf\xbb\xf7\xac\x56\x43\x5e\xe8\x12\xf9\x5d\x16\x5d\xb5\x15\x40\x88\x6f\xc9\xde\xd8\x8a\xcc\x1b\xc2\x09\x72\x47\x33\x16\x05\x3e\xdc\xeb\xcd\xa5\x70\x82\xdf\x65\x7b\x47\xb9\x37\xa5\x5d\xe4\xf7\xd3\x15\x00\xb5\xb4\x2e\x00\x04\x84\x8b\x5a\x8d\x65\xb5\xe0\x48\xcc\xb9\xb0\x08\xeb\x1b\xf9\x0e\x3a\x16\x65\x19\x58\x34\xbb\x68\x80\xd2\xc7\xa2\x1d\x3f\xd9\x22\x55\xa4\x72\xf3\x50\xfc\xee\x05\x9c\xd7\xb5\x0d\x87\x0f\x87\x64\xd1\x3b\x16\xcd\xd2\xc2\x96\xb0\xf6\x81\x36\xe5\xe1\x02\x61\xd2\x8f\x70\x0f\x03\xe9\xcc\x3d\xd1\x25\x55\x49\x85\x8b\x11\xe7\xb0\x4e\x92\xa4\x1b\xaf\x51\xde\xfd\x79\xd6\xc3\x48\x4e\xe3\x56\x15\x10\x23\xac\x07\xc7\x04\x36\xb5\x28\xe3\x04\x62\x34\x06\xd0\x18\x6d\x12\x42\xc9\x32\x78\x6b\x8a\x0a\xca\x9c\x45\x98\x1a\xac\xa4\x75\x68\x36\xf2\x38\x61\xde\xb8\xdd\xad\x80\xaf\x1f\x16\xf9\x21\xed\x57\x63\x4c\x37\xf2\x01\xcd\x55\x89\x86\x5c\x0c\xba\xd6\x28\x50\xb2\x5e\x19\xc4\x22\x41\x47\xcf\x8d\xd6\x6e\xf8\xc2\xe9\x17\x5f\x7a\xf9\x95\xf3\x59\xa5\x45\xd9\x48\xf5\x6a\x31\x11\xc6\xa2\x1b\xb5\x6e\x7c\xe6\xc4\x94\xbe\xaf\xc9\x06\x47\xd7\x4c\x8b\x27\x6a\x5d\x8c\x36\x75\x21\xa8\x4e\x4b\x18\x8e\x00\xd3\x70\xee\xb4\x4f\x1e\x8b\xca\x7c\x40\xa7\x24\xab\x4f\x12\x1d\x32\xe6\xa1\xba\x07\x30\x6e\x5c\xba\x33\x35\x52\xb9\x71\xcc\xd7\xec\x70\xcd\x9e\x77\xc5\x34\xa6\xaf\x32\xc9\xd6\xec\x73\xd2\x0f\xa0\x4c\x49\x5f\x1a\x7b\x59\xe9\x9b\x8a\xc0\xaf\x69\xe3\xc7\x3e\xac\x24\x61\x91\x1c\xfb\xb8\xfe\x37\xa2\x1c\x51\x0a\xa2\x5a\x57\xe9\x65\xe1\x44\x1d\xf3\xb5\x5d\x3e\x40\x63\x12\x16\xed\x31\xd2\x63\x23\x87\x11\x49\x43\x75\x7b\x24\x97\xdb\xad\x3a\xaa\x27\xcd\x28\x21\x41\xed\x55\x74\x41\x21\xcf\x40\x45\x87\xe9\x75\xac\x0b\xdd\x20\xed\x0e\xde\xf4\xc0\xa4\x74\x93\x50\x5d\x50\xa5\x2f\xfc\x98\x0f\xcf\xfc\xff\xcc\x69\x3e\x20\x98\xa4\x97\xf9\x98\xb8\x7c\x31\xc4\x0f\x8c\xa4\xba\xf1\x60\xfd\x85\xbd\xee\xd7\x06\x60\xf0\x7e\x8b\xd6\xc1\x7a\x67\xf5\x33\x8a\xdf\x57\xc4\x9f\xdf\x7f\x77\xf0\xcd\x17\xfb\x9f\x7f\x70\xf0\xe8\xf1\x5f\xbf\x7e\x7a\xf0\xd5\xb7\xfb\x8f\x3f\xdc\xff\xf8\xf1\xc1\x97\x1f\x3d\x7d\xf2\x73\x88\x72\x38\xea\x41\xd2\x2d\x92\xe7\xb2\x36\xcd\xea\xf3\x4e\x85\x92\x05\x65\x29\xbd\x44\x59\x8a\x93\x2e\xbb\x53\xe1\x26\x8b\x30\x84\xf0\xae\xa8\x5b\x8c\x39\x99\x78\xb8\x00\x24\xce\x16\x15\x4a\xad\x82\x3c\x40\xc6\x40\xe4\x11\x46\x23\xe0\x7c\x81\x88\xd7\xda\x62\x30\x4d\x85\x11\x0d\xef\xe8\xb2\x0c\x9e\x3e\xf9\x6c\x57\xe2\x83\x3f\xbe\xfe\x71\xff\xb7\x47\x4f\x7f\xf9\x61\xff\xa7\x27\x07\x9f\xfc\xde\x9f\x2a\xd7\xe5\x2c\x14\xb3\x41\x51\x5e\x96\x35\xc6\x9c\xb6\x73\x38\x19\xe0\x4e\x02\x4f\x27\xae\xa9\xbb\xc8\x80\x1c\xe6\x45\x4e\x3b\xd3\x0b\xd6\xa2\xfb\x37\xaf\x3b\x61\xff\x08\x82\x38\xa9\xd7\x23\x26\x20\xb2\x3e\x6f\xee\x56\x5f\xec\x2e\x66\x4f\x1a\xde\xae\x04\x6e\xdc\xca\x67\x0e\x09\x6a\x29\xd8\xd0\xcf\xd2\xed\x45\x9f\xff\xa4\x5d\xf7\xca\x10\xe8\xca\x68\xe6\x25\x4d\x28\xd6\x79\x52\x7e\x49\xdd\xd3\x33\x98\xe9\xd6\x80\x9d\x59\x87\x0d\xdc\x86\xdb\x1c\x4e\xb2\x28\xe2\x37\xd5\x15\x54\x68\x84\xc3\x12\xf2\x19\x5c\xd1\xa7\xfc\x65\x9e\x5b\xa9\x4e\xed\x30\xcb\x16\xba\xa2\x6d\x95\x9d\x48\x85\xbb\xbe\x83\x2e\xed\xbe\xa9\x6e\x84\x76\x01\x52\x8d\xf5\xad\xf9\xfa\xce\x61\x43\x81\x21\x90\x44\x5d\xd7\x4e\xdf\x70\x5a\xc4\xf3\x67\xec\xb0\xd7\x24\x0b\x90\x65\xfe\x0f\xb8\xab\xb3\x9d\xb7\x37\x61\x42\x1d\x27\xa0\x1d\x79\x07\xfd\x4b\xb4\xbc\xfd\x99\xe4\x73\xdf\x25\xfe\xe0\xdc\x52\x33\x3b\x8e\xcb\x77\xba\x65\xae\xbe\xd5\x1d\xe7\x32\xef\x85\xf3\x53\xee\x38\x61\x1c\xd8\xb6\x28\xd0\xda\x71\x5b\x0f\xfa\x2e\x2c\x2d\x98\x56\x29\xfa\xe3\x90\xa6\xe9\x4d\xd5\x65\x61\xab\x46\x6a\x96\xdd\x25\xf6\x3c\x2c\x8a\xba\x7f\x40\xe9\x9b\x5a\xaa\xf8\xc6\xad\x30\x7d\xc8\x49\xc5\x21\xdd\xe9\x42\xd4\x94\xb6\x21\x1f\x3c\x5b\x81\xbd\x01\x70\x3e\xcf\x03\xfd\x7f\xa2\xee\xd1\xbf\x09\xd6\x51\xdb\xdb\x63\x7f\x07\x00\x00\xff\xff\x44\x08\xa9\x3a\xbf\x09\x00\x00")

func stub_core_core_stub() ([]byte, error) {
	return bindata_read(
		_stub_core_core_stub,
		"stub/core/core.stub",
	)
}

var _stub_core_response_response_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4f\xc3\x30\x0c\x85\xcf\xcb\xaf\xb0\xfa\x33\xb8\xc2\x11\xd0\x04\xdc\x57\xab\x35\x91\x61\x75\xa2\xd8\x39\xb0\x69\xff\x1d\x39\x6b\xa7\x4c\x5a\x4f\xcd\x7b\x9f\xfd\xf2\x92\x71\xfa\xc5\x48\x50\x48\x73\x12\xa5\x10\xec\x2f\x13\x7c\x90\x81\x5a\xa9\x93\xc1\x39\xec\x9e\xd3\x4c\xc0\x62\xb0\x7d\xe3\x8f\x26\x79\x1a\xa6\x34\xd3\x30\x86\xdd\x9b\x46\x70\x9c\x25\xde\xf9\x8b\x46\xb7\x5f\xd0\xd0\xc7\xa9\x7c\xe3\x44\xe7\xcb\x66\xcf\x68\x38\x8c\xe1\xb2\x66\xbe\xb2\xf6\xa1\xed\xf8\x60\xea\xc8\x6a\xbe\x75\x8f\x91\x05\x8d\x93\x40\xf7\xbb\x42\xf9\xa6\x74\x01\x1d\xd6\x75\xab\xa5\x90\xd8\xde\x1f\xc1\x2b\x6e\xd5\xae\xf2\x21\x63\xa4\x35\x8d\x3e\xf9\x44\xde\xae\xc3\xdc\x3e\x28\x9f\x1a\xf3\x95\x0c\x8f\x0e\xea\x1d\x63\x2e\xb7\x45\x7a\xa3\xde\xeb\xa2\xf0\x80\x92\xba\x68\xbb\xf1\x7f\x00\x00\x00\xff\xff\x2f\xbd\xad\x10\x98\x01\x00\x00")

func stub_core_response_response_stub() ([]byte, error) {
	return bindata_read(
		_stub_core_response_response_stub,
		"stub/core/response/response.stub",
	)
}

var _stub_go_mod_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcd\x4f\x29\xcd\x49\x55\xb0\xb1\x81\x30\xe2\xf3\x12\x73\x53\xed\xec\xb8\xb8\xd2\xf3\x15\x0c\xf5\x0c\x8d\xb9\x00\x01\x00\x00\xff\xff\xd1\x29\x85\xa2\x20\x00\x00\x00")

func stub_go_mod_stub() ([]byte, error) {
	return bindata_read(
		_stub_go_mod_stub,
		"stub/go.mod.stub",
	)
}

var _stub_html_create_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xcc\xb2\x05\x24\xa3\xfe\xda\xa0\x58\x14\xaa\x29\xb4\x3d\x14\x6d\x0f\xd9\x43\x7a\x5b\x2c\x02\x5a\x1a\x2a\x4c\x28\x52\x20\x47\x8e\x8d\xc0\xff\xbd\xa0\x64\x47\x8e\x25\x7f\xa0\x3c\x10\x30\x39\xf3\xe6\xbd\x37\x43\x79\x49\x58\x56\x5a\x10\xa6\x23\x00\x80\x65\xae\xd6\x90\x69\xe1\x3d\x67\x5a\x6c\x6d\x4d\xac\xbd\x68\x2e\xd5\x74\xe5\x50\xe4\x99\xab\xcb\x15\x24\x9e\xb6\x1a\x39\x7b\x2b\x85\x2b\x94\x49\x20\xba\xfb\xb9\xda\x40\xd8\xa2\xdd\x51\x56\x2f\x73\xaa\x08\xcb\x74\xb9\x24\xb1\xd2\xf8\x68\x44\x89\x69\xba\x9c\xf7\x23\xae\x21\x64\x0e\x05\xe1\xc5\xcc\x8f\x97\x1f\x94\x64\xd6\x10\x1a\xea\x64\x54\x22\xcf\x95\x29\xf6\x3a\xa2\x09\x94\xca\xfc\x85\xaa\x78\xa2\x70\xf4\xcb\xa2\x39\x5b\x89\xec\xa5\x70\xb6\x36\x79\x02\xd1\x0f\x52\xca\x21\xa9\xce\xbe\x02\x6d\x2b\xe4\x4c\x6a\xdc\x30\x78\xae\x3d\x29\xb9\xe5\xcc\x93\x70\xc4\x40\x68\x55\x18\xce\x4a\x95\xe7\x1a\x19\x24\x45\x4d\x84\x8e\xb3\xcf\x5f\x18\xac\xa7\xd2\x3a\xce\xe2\xb5\xd0\x35\x4e\x82\x39\x63\x50\x06\x94\x91\x96\x41\xcf\xf3\xe8\x6e\x51\x6d\x60\xd1\x23\xf1\xae\x51\x83\xaf\x84\xe1\xec\x8e\x75\xb9\x84\x1b\xfa\x3d\x50\x48\x22\x17\xe4\x85\xec\xb7\xb7\x50\x6a\xb7\x0b\x86\x65\x56\x5f\x41\xfb\x32\x50\x6e\x1f\xa4\x4c\x55\x13\xac\xa7\xa5\xcd\x51\x73\x16\x78\x7f\x0b\xd0\xdf\x59\xd3\xe3\xe6\x7a\x00\x7d\xa8\x6c\x38\x74\xf6\x75\xc8\xde\xab\xfc\xc0\x4a\xe9\x91\xae\x0b\x3f\xa7\x63\x55\x13\x59\xb3\x6f\xa3\xaf\xb3\x0c\xbd\x67\xf0\x5b\xa6\x55\xf6\xc2\x59\x61\x1f\xc4\x1a\x59\x1a\xf6\x66\xc6\x9a\xe8\xdb\xc0\xda\x56\x76\x48\x7f\x88\xec\x85\xa5\x61\xbf\x84\x74\x9b\x43\x6d\x54\x33\xd8\xfb\xf7\x3c\xcf\xd5\x3a\x1d\x2d\xe7\xdd\x33\x5f\xfa\xcc\xa9\x8a\xf6\x6c\x82\x27\xf3\x67\xb1\x16\xed\xe9\xde\x90\xd2\xe6\xb5\xc6\x19\x6e\x2a\xeb\xc8\x03\x87\xb7\xf7\x12\xb9\x20\x91\x80\xac\x4d\x46\xca\x9a\x78\x7c\x74\x15\x96\x43\xaa\x9d\x39\x39\x6c\x2e\x6c\x4d\xf8\x77\x9e\x00\x3d\x29\x3f\x53\xf9\xa4\x17\x11\x8c\x49\xfa\x89\x41\xc5\xf2\xd9\x3f\x86\xc2\x8f\x21\x26\xed\xbb\xb3\xeb\xa3\x49\x85\x3a\xf7\x8f\x41\xe5\x30\xe8\x11\xea\x51\xec\x10\xf8\x68\xf8\xd7\x51\xd1\xca\xd9\xca\x27\xf0\x2d\x52\x79\xf4\xbd\x3b\x2e\x91\x9e\x6c\xee\x93\x13\x3b\xda\x9e\x5f\x30\x31\xac\xc6\xa6\x1f\x1b\xd7\xdc\xac\xb0\xf1\xf4\xf3\x78\x74\x41\x72\x3b\x91\x57\x30\x95\x8c\x3f\x35\xb8\x6b\x74\x4a\x6e\xff\x0c\xb2\xff\xdd\x56\x18\x8f\x87\xa2\xe1\xbd\x9d\x57\x2c\x79\xa7\x2b\x36\xca\xfa\x41\x9c\x59\x65\x3d\xc5\xd1\x5c\x54\x6a\xfe\xf1\xcb\x3f\x6f\x3f\xe3\xd1\xe4\x9f\x87\xaf\xf7\x33\x4f\x4e\x99\x42\xc9\x6d\xdc\x8e\x89\x91\x76\x3c\x1e\x46\xa4\x27\x34\xb1\x43\x5f\x59\xe3\x91\xa7\xc3\xfc\xf7\xaa\x0f\x61\xb3\xd0\xee\x59\x66\x73\x84\x4f\x9c\xc3\xdd\x62\x71\x4e\xf8\x61\x09\x8d\x8e\x4e\xf2\x4b\x5f\x0c\x73\x3a\xac\x33\xae\x1d\x56\xdf\xbd\xc3\xfa\xba\x7a\xc6\x8c\x66\xc2\x7b\x55\x98\xce\x02\x98\x7c\x24\x10\xb6\x61\x06\xbb\x8b\x43\x72\xd2\xf6\x6e\x5a\x60\x70\x5c\xa4\x75\xf1\x5a\x38\x08\x8d\x0a\x7f\x42\x5d\x4b\xce\x98\xa6\x64\xcb\xf9\xe8\x3d\xb5\x1f\x7f\xe0\x9c\x03\x33\x75\xb9\x42\xc7\x2e\x59\xae\x64\xac\xfc\xbd\xb8\xef\xb4\xb7\x00\x67\x07\xf4\xb0\xda\x3e\x85\xd8\x9f\x18\x28\x0f\xc6\x12\x08\x38\x54\xbc\xa1\x5b\x20\x85\xf6\xf8\x3f\x7a\x76\xc2\x14\x38\xdc\x37\x55\x7b\x12\x86\x1b\x86\xda\xe3\x35\xe3\xda\x57\x71\xd1\xb8\x3e\x8b\x87\x26\xe9\x46\x16\x37\xbc\xf0\xbd\x4d\xe4\x6a\xfc\xf5\xdc\x17\x71\xd4\xee\xcb\x79\xfb\x6f\x92\xfe\x17\x00\x00\xff\xff\x4c\x10\xbd\xe2\x5e\x0a\x00\x00")

func stub_html_create_stub() ([]byte, error) {
	return bindata_read(
		_stub_html_create_stub,
		"stub/html/create.stub",
	)
}

var _stub_html_detail_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x6d\x6b\xdb\x30\x10\xfe\x9e\x5f\xa1\x69\x03\x27\x90\xc4\x69\x18\x65\x78\x96\x59\xc7\x3e\xac\xbf\xa1\x94\xa2\x58\x67\x47\xad\x2c\x09\xe9\x9c\x26\x04\xff\xf7\x21\xdb\x6b\xde\xdc\x66\x4c\x1f\x0c\xbe\x97\xe7\xee\x79\x74\xa7\x14\xa1\xb2\x8a\x23\x64\x23\x42\x08\x49\x85\xdc\x90\x5c\x71\xef\x19\x55\x7c\x67\x6a\xa4\x9d\xa3\x75\xca\xd9\xca\x01\x17\xb9\xab\xab\x15\x49\x3c\xee\x14\x30\xba\xaf\xb8\x2b\xa5\x4e\x48\xb4\xfc\x6a\xb7\x24\x7c\xa2\xe6\x28\xeb\x22\x73\x26\x11\xaa\x2c\x4d\x91\xaf\x14\x3c\x69\x5e\x41\x96\xa5\xf1\x65\xc4\x35\x04\x01\xc8\xa5\xfa\x30\xf3\xd4\x79\xc2\x24\x37\x1a\x41\xe3\x81\x86\xe5\x42\x48\x5d\xf6\x3c\xa2\x29\xa9\xa4\xfe\x0d\xb2\x5c\x63\x30\x7d\x5b\xb4\xb6\x15\xcf\x5f\x4a\x67\x6a\x2d\x12\x12\x7d\x2e\x8a\x62\x88\xaa\x33\xaf\x04\x77\x16\x18\x2d\x14\x6c\x29\x79\xae\x3d\xca\x62\xc7\xa8\x47\xee\x90\x12\xae\x64\xa9\x19\xad\xa4\x10\x0a\x28\x49\xca\x1a\x11\x1c\xa3\x37\xb7\x94\x6c\x66\x85\x71\x8c\x8e\x37\x5c\xd5\x30\x0d\xe2\x4c\x88\xd4\x44\xea\xc2\xd0\x0b\xc9\xa3\xe5\xc2\x6e\xc9\xe2\xa2\x87\x37\x8a\x8a\x78\xcb\x35\xa3\xcb\xa3\x5c\x84\x2d\xde\x85\x0e\x92\xc8\x05\x76\x21\x7b\xbf\x0f\x95\x9a\x26\xe8\x95\x1b\x75\x05\xed\x76\xa0\x5c\x1f\x24\xb5\xad\x91\x6c\x66\x95\x11\xa0\x18\x0d\x6d\x3f\x04\xe8\x47\xda\x5e\x71\xeb\x1e\x40\x1f\x2a\x1b\x8c\xce\xbc\x0e\xa9\x7b\xb5\x3f\x62\x8a\xc2\x03\x5e\x27\xfe\x1e\x8f\x55\x8d\x68\x74\x7f\x8b\x9d\xf8\x3f\x72\x25\xf3\x17\x46\x4b\xf3\x93\xe7\x2f\x34\x0b\xdf\x76\xbe\xda\xd0\xff\x25\xd5\x45\xb5\xa3\xd8\x6f\x60\x2c\xe4\x26\x1b\xa5\xf1\x61\x31\x53\x9f\x3b\x69\xb1\xef\x26\xd0\x88\x9f\xf9\x86\x77\xd6\x9e\x43\x65\x44\xad\x60\x0e\x5b\x6b\x1c\x7a\xc2\xc8\xfe\xad\x84\xe0\xc8\x13\x52\xd4\x3a\x47\x69\xf4\x78\x72\xe4\x0a\xc7\x01\xd6\x4e\x9f\x19\x5b\x87\xa9\x11\xee\x45\x42\x70\x2d\xfd\x5c\x8a\xe9\x45\x44\x10\x26\xb9\x4c\x0c\x2c\xd2\x67\xff\x14\x0a\x3f\x85\x98\xec\x52\x9d\x66\x34\xfc\xd7\x1c\xaa\x58\x67\xac\x4f\xc8\x43\x24\x45\xf4\x78\x30\x57\x80\x6b\x23\x7c\x72\xd6\xb1\xd4\x12\xef\xac\xfc\xd5\x3e\x0a\x1f\xd0\x0d\xa7\x25\xc4\xb7\xd2\xf8\xc1\xfb\x9f\x5b\xe3\x71\x1c\xc5\xdc\xca\xf8\xf4\x99\x8a\xbb\x37\x27\x9a\xee\xa5\x48\x2c\x77\x1e\xee\x35\x8e\x5b\xb8\x5e\xad\x49\x33\x19\xc6\xc4\x35\xe8\xb1\x03\x6f\x8d\xf6\xc0\xb2\x41\xd5\x3a\x22\xc5\x5b\xd8\x3c\x28\x38\xcf\x8d\x00\xf2\x89\x31\xb2\x5c\x2c\x86\xd8\x1c\x1f\xae\xc0\xe1\x59\x7e\xe5\xcb\xe1\x9e\xfe\x9e\x6e\x02\xde\x0d\x69\xde\xf5\x74\x83\xa1\x0b\x43\x18\x39\xad\x19\x3e\x83\x69\x67\xf2\x34\xa7\x43\xd5\xed\xd6\xbf\xdc\xde\x97\x56\x6f\x37\x2f\xcd\x78\x76\x33\xb9\x3e\x4c\xb9\x03\x8e\x20\x3e\x80\xee\xc9\x1c\x4d\xd1\x78\xf2\x7d\x74\x0a\xda\x8c\xd2\xb8\x5b\xbb\xec\x4f\x00\x00\x00\xff\xff\x27\x7a\xb2\x72\x39\x07\x00\x00")

func stub_html_detail_stub() ([]byte, error) {
	return bindata_read(
		_stub_html_detail_stub,
		"stub/html/detail.stub",
	)
}

var _stub_html_edit_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\xcc\xb2\x05\x24\xa3\x8e\xed\x0d\x8a\x45\xa1\x5a\x42\xb7\x28\x8a\xee\x25\x3d\x6c\x6f\x8b\x45\x40\x8b\x23\x65\x12\x8a\x14\xc8\x91\xd7\x86\xe1\xff\x5e\x50\x72\x62\xc7\x92\x3f\xd0\x1e\x97\x07\x01\xe6\xcc\xbc\x99\xf7\x66\x48\x7a\xce\x58\xd5\x5a\x32\x66\x37\x00\x00\x73\x45\x4b\xc8\xb5\xf4\x3e\x15\x5a\xae\x6d\xc3\xa2\x33\xb4\x46\xba\x5d\x38\x94\x2a\x77\x4d\xb5\x80\xc4\xf3\x5a\x63\x2a\x36\x95\x74\x25\x99\x04\xa2\xbb\x9f\xeb\x15\x84\x4f\xb4\x3d\x88\xea\x45\xde\x12\x63\x95\xcd\xe7\x2c\x17\x1a\x1f\x8c\xac\x30\xcb\xe6\xd3\xbe\xc7\x25\x04\x54\xc4\x67\xe3\xde\x1a\xdf\xf0\xc8\xad\x61\x34\xbc\x27\x51\x4b\xa5\xc8\x94\x3b\x16\xd1\x18\x2a\x32\x7f\x21\x95\x8f\x1c\xb6\x7e\x99\xb5\x7b\x0b\x99\x3f\x97\xce\x36\x46\x25\x10\xfd\x50\x14\xc5\x10\x51\x67\xbf\x01\xaf\x6b\x4c\x45\xa1\x71\x25\xe0\xa9\xf1\x4c\xc5\x3a\x15\x9e\xa5\x63\x01\x52\x53\x69\x52\x51\x91\x52\x1a\x05\x24\x65\xc3\x8c\x2e\x15\xef\x3f\x08\x58\xde\x16\xd6\xa5\x22\x5e\x4a\xdd\xe0\x38\x48\x33\x02\x32\x40\xa6\xb0\xa2\x27\x78\x74\x37\xab\x57\x30\xeb\xd5\xf0\x4a\x51\x83\xaf\xa5\x49\xc5\xdd\x41\x2c\xe3\x8a\x3f\x86\x0a\x92\xc8\x05\x76\x21\x7a\xb3\x09\x99\xb6\xdb\xa0\x57\x6e\xf5\x05\xb4\x0f\x03\xe9\x76\x4e\x64\xea\x86\x61\x79\x5b\x59\x85\x3a\x15\xa1\xec\x2f\x01\xfa\xab\x68\x1b\xdc\x9a\x07\xd0\x87\xd2\x86\x4d\x67\xbf\x0d\xa9\x7b\xb1\x3e\xb0\x45\xe1\x91\x2f\x13\x3f\xc5\x63\xd1\x30\x5b\xb3\xeb\xa2\x6f\xf2\x1c\xbd\x17\xf0\x5b\xae\x29\x7f\x4e\x45\x69\x3f\xcb\x25\x8a\x2c\x7c\xdb\x11\x6b\xbd\xaf\x03\xeb\x3a\xb9\x47\xfa\x5d\xe6\xcf\x22\x0b\xdf\x73\x48\xd7\x29\xd4\x79\xb5\x73\xbd\x3b\xcc\x53\x45\xcb\xec\x66\x3e\xdd\x9f\xf1\xb9\xcf\x1d\xd5\xbc\xab\x26\x68\x32\x7d\x92\x4b\xd9\xed\xee\x04\xa9\xac\x6a\x34\x4e\x70\x55\x5b\xc7\x1e\x52\xd8\xbc\xa6\x50\x92\x65\x02\x45\x63\x72\x26\x6b\xe2\xd1\x81\x29\x2c\x87\xdc\x38\x73\xb4\xd9\x1a\x6c\xc3\xf8\x49\x25\xc0\x8f\xe4\x27\xa4\xc6\x3d\x8f\x20\x4c\xd2\x0f\x0c\x2c\xe6\x4f\xfe\x21\x24\x7e\x08\x3e\x59\x5f\x9d\x6d\x1f\x0d\x0a\x42\xad\xfc\x43\xa0\x39\x8c\x7a\x88\x7b\xe0\x3c\x00\x0f\xdb\x9b\xe1\x5f\x07\x79\x6b\x67\x6b\x9f\xc0\x97\x88\x54\xf4\x75\xbf\x5d\x21\x3f\x5a\xe5\x93\x23\x45\xc8\x10\x7f\xac\xe9\x0f\x64\x49\xfa\x8c\x9c\x61\xb5\x82\xc9\x15\x59\x3f\xc8\x62\x52\x5b\xcf\x71\x34\x95\x35\x4d\xdf\xde\xa8\x53\xd5\xc2\x47\xe3\x0d\xa9\xa4\x96\xce\xe3\x27\xc3\x71\x0b\xb7\xeb\xc6\x68\x3b\x1a\xc6\xe4\x47\x34\xb1\x43\x5f\x5b\xe3\x31\xcd\x4e\xe8\x17\x88\x14\xaf\x6e\x93\xa0\xe4\x24\xb7\x0a\xe1\x5d\x9a\xc2\xdd\x6c\x36\xc4\xe6\x70\x49\x8d\x8e\x8f\xe2\x2b\x5f\x0e\xd7\xf4\xb2\xba\x09\x3b\xe9\xb2\x3d\x69\xe9\x06\xcf\x14\x16\x52\x78\x9b\x33\x7c\x06\xc3\x8e\xe4\x39\x1a\xb3\xee\xec\x5e\xd3\xbd\x1f\x5b\xbd\xdd\xa4\xb4\xf1\xed\xfb\x0b\x98\xe1\x4e\xb9\x80\x49\x45\xfc\xae\xc5\x5d\xa2\xa3\x62\xfd\x67\x18\xde\x7f\xd6\x35\xc6\xa3\x53\x8a\x9f\x10\xad\x2f\xd6\x7f\x1f\xb6\xf0\x16\x47\xe3\x57\x91\xbf\xa3\xc1\xfa\x7b\xf1\x84\x39\x4f\xa4\xf7\x54\x9a\x78\x3f\x66\xe3\xfe\x94\x0d\x57\x70\x7e\xcc\x8e\x9a\xbc\x9f\x0d\x18\x1c\x8e\xc2\xba\x78\x29\x1d\x84\xb6\x84\x7f\x0e\xfb\x8e\x9c\x10\x8d\x8a\xae\xe6\x83\x3b\xb0\x7b\xb2\x21\x4d\x53\x10\xa6\xa9\x16\xe8\xc4\x39\xc9\xa9\x88\xc9\xdf\xcb\xfb\x3d\xf7\x0e\xe0\xe4\x38\xbe\xac\xae\x4f\xc1\xf7\x27\x01\xe4\xc1\x58\x06\x09\x2f\x19\xaf\xe8\x16\x14\x52\x7b\xfc\x3f\x97\xc1\x0b\x55\xb8\x6f\xb3\xf6\x28\x0c\x37\x0c\xb5\xc7\x4b\xc2\x79\x76\x64\xca\xb3\xc2\xf5\xab\xf8\xdc\x06\x5d\x59\xc5\x15\xe7\x79\x27\x13\xbb\x06\x7f\xbd\xfc\x88\xe5\x0e\x25\xa3\x3a\x73\xfd\xec\x0a\x3b\x78\xbd\xe2\xd1\x1e\xb8\x03\xdd\xde\xcc\xa7\xdd\xdf\x89\xec\xdf\x00\x00\x00\xff\xff\x31\x67\xa3\x32\x5c\x0c\x00\x00")

func stub_html_edit_stub() ([]byte, error) {
	return bindata_read(
		_stub_html_edit_stub,
		"stub/html/edit.stub",
	)
}

var _stub_html_list_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x59\x4f\x8f\xdb\xb8\x15\xbf\xe7\x53\xbc\x70\x0b\xc8\x83\xf8\x5f\x82\x4d\x50\x68\x2c\x67\xdb\xcd\x16\xbd\x34\x58\x34\xe9\x5e\x06\x81\xc1\x91\x9e\x6c\x26\xb4\xa8\x92\xb4\x3d\xb3\x86\xef\x7b\xeb\xad\x40\x7b\xea\xa1\x9f\xa1\xa7\x7e\x9d\x2d\xd0\x53\xbf\x42\xf1\x28\x59\x96\x2d\xca\xd6\x0c\x8a\xb6\x8b\xe8\x30\x91\x45\xf2\xf1\xf7\xfe\xfd\xde\x23\x33\xb1\xb8\xcc\x25\xb7\x38\x7d\x02\x00\x30\x49\xc4\x1a\x62\xc9\x8d\x89\x98\xe4\xf7\x6a\x65\x59\x31\xe0\x06\xc5\xe0\x56\x23\x4f\x62\xbd\x5a\xde\x42\x68\xec\xbd\xc4\x88\x6d\x97\x5c\xcf\x45\x16\x42\xf0\xe2\xcb\xfc\x0e\xe8\x4f\xb0\xab\xad\x6a\xac\x1c\x08\x8b\xcb\xe9\x64\x62\xf9\xad\xc4\x59\xc6\x97\x38\x9d\x4e\x46\xcd\x19\x97\x24\x48\x61\xec\xd9\x75\xc7\x83\x47\x7a\xc4\x2a\xb3\x98\xd9\x83\x12\x39\x4f\x12\x91\xcd\x4b\x2d\x82\x3e\x2c\x45\xf6\x6b\x14\xf3\x85\xa5\x4f\x3f\x1f\xbb\x6f\xb7\x3c\xfe\x34\xd7\x6a\x95\x25\x21\x04\x5f\xa4\x69\xea\x53\x54\xab\x8d\xcf\x36\xe3\xfc\x0e\xc6\x10\xec\x18\xd8\xfb\x1c\x23\x96\x4a\xbc\x63\xf0\x71\x65\xac\x48\xef\x23\x26\x31\xb5\x27\xb2\x2a\xa8\xb2\x09\x33\x78\xee\xe4\x05\x7d\x8b\x77\xf6\x17\x52\xcc\xb3\x30\xd0\x84\x96\x36\x30\x39\xcf\xa2\xe0\x55\x00\xeb\x41\xaa\x74\xc4\xd6\x5c\xae\x10\x44\x06\x06\xb9\x8e\x17\xb3\x54\xa0\x4c\x8c\x67\x37\x7a\xb6\x5b\x37\x7d\xb7\xfb\xd7\xdf\xff\xec\x9d\x30\x11\x03\x91\xe5\x2b\x0b\xeb\xc1\x52\x25\x28\x23\x26\xb2\x54\xdd\xb8\x55\x1f\x18\xe4\x92\xc7\xb8\x50\x32\x41\x1d\x31\x06\x25\xf0\x8d\x48\xec\x22\x84\x17\xe3\x71\x7e\xc7\x9c\xb7\x9d\x0c\x8f\xc2\x23\xa7\xf1\x89\x55\x47\xce\xac\x3e\x53\xb7\x9a\xcc\x19\x81\x3d\x7f\xc1\xc0\xaf\x27\x05\xd4\xca\x5a\x95\x95\xfe\x48\x30\xe5\x2b\x69\x19\x7c\x15\x4b\x11\x7f\x22\xad\xd6\xea\x13\xfe\x92\xdb\x78\xf1\x06\x25\x5a\x64\x53\xf7\x03\x8a\x5f\x2e\xb8\x9c\x80\x8e\x4a\x78\xb1\x55\x8e\xf5\xf8\xb1\x1b\x6e\x32\xfe\x29\xe8\x77\xce\xcf\x6c\x5a\xfc\x7b\x0e\xe9\x03\x2c\xf1\xb5\x46\x4e\x46\x78\x8b\x9b\x07\xeb\xee\x77\xe0\xad\x6e\x78\xd4\x71\x02\x84\xb1\x92\xab\x65\x66\x22\x16\x2b\x39\xa3\x3c\x67\x10\x26\xdc\xf2\x88\x2d\xb9\xc8\x66\xf4\xca\x00\xbe\x52\xd9\xc0\xa0\xc4\xd8\x0a\x95\x0d\xe2\x05\xcf\xe6\x18\xb1\x82\x56\xaa\xef\xb3\xe2\xbb\x2f\xb7\xf6\xd4\x07\x46\x2a\x3b\x30\xb1\x22\xed\xb7\x5a\x6d\x28\x87\xa4\xb2\x64\x0a\xcb\x85\x9c\x15\xba\x3e\xc8\x21\x46\x7c\x8f\x11\x33\x4b\x2e\xe5\xa9\x21\xbf\x13\xb8\xe9\x69\xb5\xb9\x62\x53\x7a\x7d\xa8\x7b\x2e\xca\x7f\xe3\x40\x97\x3b\x14\x3f\xfe\xe3\x7b\x7c\x93\x08\x5b\xee\x40\xaf\x8f\x0a\x31\x7b\x41\x0b\xca\xb2\x4a\x8b\xcb\x29\x77\x5c\xc8\xea\x91\xe7\x22\xa2\x11\x6a\x39\x9f\x63\x99\x7f\xe6\xc0\xd4\x8e\xa8\x89\x44\x43\xab\x2c\x97\x11\xa3\x69\xef\xe9\x95\x41\x48\xef\x83\x02\x33\xbd\xbe\x13\xdf\x23\x03\xb3\x50\x9b\x01\x4a\x5c\x73\xab\x74\xf1\xcb\x2d\x2d\xe2\x73\x1f\x95\x65\x0e\xb9\x5f\xdf\xf2\x39\x32\x70\x2c\x48\x62\x1a\xc8\x96\x2a\xe1\xf2\x40\xaf\x6b\x81\x9b\xdf\xd0\x27\x06\xa1\xe3\xd1\x88\xbd\x1c\x33\xb0\xc2\x12\x73\xe4\x1a\x69\x82\xbf\x76\x50\x2d\xf2\x96\x1b\x63\xb9\xb6\x0c\x38\x31\x4e\xc4\x96\x22\x49\x24\x32\x08\xe7\x2b\x6b\x89\xb7\x9f\xbf\x62\xfb\xe2\xd1\x73\xc4\xde\x07\xaa\xd3\x57\x54\x44\x2a\x38\x6f\x5c\x16\x9e\x96\xba\xe0\xa5\x2b\x4c\x67\xe8\xeb\xc0\x80\xaf\x2e\x10\xe0\x76\x4b\xbb\xee\x76\xad\x7c\xda\x90\xf8\xfc\x45\xcb\xbe\xe0\xad\x5c\x4e\xb7\xb3\xf5\x08\xce\xd2\xb9\x97\xd6\x46\xa5\x07\x2f\xf9\x35\x71\x41\x5d\x7a\xb6\xf4\x66\x82\xd2\xe7\xc9\xbc\xe4\xa3\x05\xf2\x04\x75\x55\x55\x63\x25\x95\x0e\xbf\x48\x5f\x8d\xaf\xc9\x7c\x03\xe7\xce\x30\xc6\xcc\xa2\x6e\xb7\xbf\x88\x0f\x79\xae\xcc\x80\x72\x5d\x2f\x79\xc1\xa1\x42\xc7\x72\x6f\x90\xb8\x35\x9b\xc9\xd6\x65\x4e\x42\xac\xb2\x54\x94\xeb\x27\x23\x37\xe2\xb1\x53\xee\xf9\x48\xad\x66\xa9\x48\x67\xf4\xf9\xb4\xdc\x0f\x0a\xeb\xbd\xf6\x8a\x2e\xa7\xbe\x5f\x20\xa8\x1c\xb5\xc3\x56\x2e\x00\x8d\xb1\xd2\x09\xa4\x5a\x2d\xc1\x2e\x10\xa8\x96\xdc\x72\x83\x7e\x8c\xa3\x44\xac\xdb\xa0\x3b\x8f\xa4\x4a\x9d\x35\x76\x6b\x06\x62\x96\x9c\x0f\xd5\x8e\x41\x0d\x17\xe8\x5b\x72\x4d\x6c\x23\x55\x36\xaf\x18\xb6\x16\x79\x10\x41\xca\xa5\xc1\xeb\xda\x37\x4a\x6c\x88\x60\xbb\x63\xd3\xaf\x79\x16\xe3\xc5\xf2\x01\xe7\x92\xc4\xab\xd2\x97\x0f\xd4\x08\xb5\x56\xfa\x44\xa5\x93\xf6\xa4\x88\x8b\xb2\x6c\x5c\x31\xe8\x50\x34\x3a\x61\xf7\x26\x39\xf8\x83\xa3\x96\xfb\x17\x92\xff\xf6\xd0\x57\xfe\x64\x19\xa0\xde\x0e\xff\x1f\xf3\x40\x6b\x25\x3b\xf5\x81\x2b\x68\xd3\xea\x00\xf4\x50\x6a\x31\x25\xb7\x98\xcf\x9b\x5c\x4e\xad\x5a\x31\x8c\xcf\xdc\x25\xcd\xfc\xf8\x87\x3f\xfe\xe3\x6f\x3f\xfc\x84\x68\xa6\x76\x2c\x74\x5c\xf3\xe3\x0f\x7f\xf9\xe7\x9f\xfe\xfa\xbf\xe2\x9a\x63\xd9\xee\x66\xa3\xbc\xce\x29\x96\xd5\x9b\xe3\x89\x89\xb5\xc8\x6d\xa9\x30\x25\xdc\xe8\x23\x5f\xf3\xe2\x6b\x69\xae\xa5\x4a\x56\x12\x87\x78\x97\x2b\x6d\x0d\xf9\xa8\xda\x82\x22\x3a\x84\x74\x95\xb9\xc3\x55\xef\xaa\x36\x44\x8f\x46\xbb\xd2\xd9\xc9\x47\x27\x72\x7f\x6e\x0b\xe1\xe6\x43\xbf\x31\x5c\x75\xd9\xe1\xd8\x3f\x48\xbd\xb6\x6f\xac\xea\x46\x43\x17\x64\x67\x26\x50\xb8\x85\xdb\x5d\x73\x46\xad\xf2\xb5\x09\x39\x29\x8e\x21\xf8\xe4\x9c\xc6\x77\x9b\x30\x5f\x1e\x84\x3e\xa3\xec\x0f\xbf\x21\xdc\xf8\xaf\x6a\xc8\x87\x61\x50\x1d\x75\x83\x7e\x71\xcd\xf2\x6a\xdc\x2f\x38\x34\x28\x48\x34\xf0\x80\xa5\x67\x32\xf9\x68\x9c\x4f\x66\xc5\x79\xdb\x6d\x36\x6d\xb9\x16\x72\xe5\x29\x0c\x0a\xd2\xc3\xa0\xef\x28\x2a\x0c\x8e\x4e\xc8\x41\x1f\xf6\x17\x3d\x2f\xc7\xbb\x86\x1c\x8f\x8a\x5a\xad\xac\x3b\x0f\x85\x76\x21\xcc\xd0\x9d\xc9\x5e\x1f\x5e\x43\x08\x82\xe6\x22\x62\x20\xaf\x27\x8f\xee\xb7\xda\xac\x56\x53\xfb\x68\xbe\x47\x71\x0f\xe0\x62\xee\xcc\x59\xbe\x19\xe5\xc7\xe2\x6b\x73\x3d\xc2\x8f\xed\x73\xf8\x55\xd3\x2b\xd7\x2a\x27\x3d\x02\x32\x46\x50\x43\xb3\x44\xbb\x50\xa4\xe2\x31\x04\x77\xd0\x7d\x73\x3e\x43\xe9\x59\x73\x5d\x24\x95\xd5\x10\x81\x33\x77\xe5\x08\x78\x0d\xc1\x6b\x1a\x8c\x82\x67\x27\x23\xe4\x8d\xeb\x27\x4d\x77\xa4\xbd\xa7\x6e\xe6\x1a\xb5\x48\xef\x7f\x45\x5a\xbf\xbf\xcf\xb1\x77\xe5\xdb\x1b\x2a\x96\xf0\x58\xa4\xf1\xc9\xc9\xe5\x77\x42\x19\xaf\xa0\x61\xae\x8c\xed\x05\x23\x9e\x8b\xd1\xf1\x85\xf2\x88\x62\x39\x78\x56\x6a\xd9\x77\x72\x28\x6e\xae\xfc\x72\xec\x02\xb3\x9e\x46\x93\xab\xcc\x60\x34\xf5\xc3\x2e\x95\xdd\x4f\x1b\x92\x93\x87\xb1\x4a\x10\x9e\x46\x11\xbc\x18\x8f\xdb\xf4\xdd\x3f\x5c\xa2\xb6\x27\xeb\x97\x66\xee\xc7\xb4\x7f\x5a\x8c\xb5\x7f\x9a\x69\xb6\x7f\x9c\xce\x15\xef\x42\x04\xc7\x1b\xbb\x3f\x64\x25\x3f\x39\x54\x12\x2a\x6a\xf6\x4b\xc8\xf9\x5c\x64\xae\x0d\x1a\xba\x6b\x8f\x59\xb6\x5a\x9a\x0e\x22\x89\xd0\x2f\x4a\xa4\x89\x33\xaa\xc6\x5e\x79\xbb\x63\xc3\x9d\x10\xc2\xe9\x8d\x4b\x2d\x27\x48\xac\xcf\x57\x0e\xdc\xcf\x5c\xc0\xeb\x61\xbe\x32\x8b\xde\xf6\xf7\x2b\xd4\xf7\xe1\x96\x56\xb8\xeb\x9f\x5d\x97\x4d\x8b\x7b\xd7\x0b\x49\x78\x92\x5c\x11\x3c\xbf\xf6\xcf\xa9\xb2\xba\x77\x75\x7d\x79\xef\xe2\xc2\xaf\xb6\xb7\x56\x1b\xdf\xf6\xa3\x11\xb5\xec\x46\x49\x74\x79\xd1\xab\xe9\xde\x8c\x47\x8f\x61\x72\x6e\x17\x61\x70\x9a\x75\x45\x39\x08\xfa\xa5\xd9\x44\x12\x6a\xb5\x19\x8a\xa4\x93\xd9\xbe\x49\x84\xbd\x0c\xbc\x33\x16\x4c\x84\x7d\x24\x92\xe2\xae\xbb\x8b\x03\xbb\x00\x89\x9d\xb4\xa0\xcb\xc6\x45\x5b\xd0\xc9\x7b\xae\xf7\xf3\x83\xaa\xb5\x2b\x91\xd5\xab\x66\xf6\x9c\xce\x2a\x5b\x71\xad\x36\x9e\x26\xa4\x16\x24\x84\xa6\x83\xf5\xea\x47\xf1\x2e\x46\x7c\x14\xc1\x17\xf0\x83\x3e\xb9\xd6\xa7\x0f\xf9\xfa\x73\x63\x7b\xcf\xc5\x4e\xe7\x05\xd5\x71\xec\xfc\x8a\x1a\x1b\x3d\x9a\x94\xbf\x13\xb8\x09\x3b\xe5\x79\xd5\xbd\x53\x9f\xd2\x1a\xc9\x47\x3d\xbe\x27\x8e\xbd\x20\x6a\x47\xb8\x0b\x31\x2a\xd2\x82\x1d\x7d\x8d\xfb\x50\x62\x36\xb7\x0b\x88\x22\x68\x0d\x88\x22\x10\x82\x6f\x25\x72\x83\x50\xb4\xeb\x20\x2c\x2e\x0d\xa4\x42\x1b\xfb\x34\xb8\x6a\x52\x3f\x54\xc1\xd0\x1c\x6b\xba\xc8\x8b\xaf\x99\xfb\xe7\xd2\xb5\xbb\x3d\x1e\x9f\xb3\x0e\xe1\x6c\x9f\xb9\xad\x46\xfd\xdc\xd2\xb6\xed\xca\xe4\x61\xab\xfe\x2b\x09\xec\xff\xdf\x55\xca\x61\xd3\x1a\x2a\x2d\x40\x6f\x3e\x34\xfb\xfd\x54\x69\xe8\xd1\xf1\x44\x80\xc8\xa0\x4d\xea\x59\xc9\x45\x29\xa6\xa5\x37\xe2\xc3\x50\x24\x4d\x2d\x77\xe7\x14\x3c\x39\xc4\x1c\x52\x01\xbc\xb9\x90\x2a\xed\xf0\x52\x80\x13\xe4\xc3\x41\xa3\x05\xf7\x9e\x4c\x6a\x87\xc3\x1b\x5a\xfc\x01\xa2\x28\x02\x96\xad\x96\xb7\xa8\xd9\xb9\x20\x15\x69\x4f\x98\xb7\xfc\x6d\xaf\xda\xab\x10\xd0\x7a\xdc\xda\x3f\x45\x64\xd3\xdc\x67\x0c\x84\x81\x4c\x59\xe0\xb0\xdf\xb1\x43\x7c\x5f\x88\xca\x0b\x81\x77\x40\x0a\x11\xbc\x75\xbb\x36\x54\xf0\x47\x24\x4a\x83\x97\x0c\x67\xac\x16\xd9\xfc\xac\xe1\x9a\x28\xde\xb9\x45\x1d\x51\x74\xa0\xe1\xd2\x4c\xc4\xbb\xd7\x97\x8f\xf7\x45\x5f\x98\x9c\x61\xdb\xf6\xfe\xbf\x26\xe6\x16\x53\xa5\xf1\xb7\xd4\x87\xfe\x2e\x4f\x8e\xfb\x56\xab\xfa\xc5\x6d\x74\x3f\xc3\x3b\xeb\x15\x5f\x3f\x82\x58\x35\x74\xfd\xb2\x3b\x78\x75\x44\x42\x0f\x09\xaf\xd1\x49\xa1\xed\xee\xc9\x64\x54\x5c\x2b\x4e\x9f\xfc\x3b\x00\x00\xff\xff\x4b\xc7\x1a\x32\x67\x26\x00\x00")

func stub_html_list_stub() ([]byte, error) {
	return bindata_read(
		_stub_html_list_stub,
		"stub/html/list.stub",
	)
}

var _stub_layout_default_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\xd9\x02\x4a\x8a\xc8\x72\xd2\x3d\xb1\x92\x80\x05\x7a\x6d\x51\xf4\x1a\x04\x0b\x5a\xa4\x24\x22\x14\x29\x90\x94\x92\xd4\xf0\x7f\x5f\x90\x92\x6d\x7d\xda\x8e\x0e\x81\x35\x9c\x79\x33\x7c\xf3\x38\x54\x62\x63\x3f\x05\x03\x93\xa9\x9a\xd1\xf4\x0e\x00\x60\x23\xc8\xa7\x6a\x6c\x28\x49\x0b\x7b\x6f\x71\xcf\x3b\xa7\xb6\xc4\xf0\xed\x79\x5b\x7f\xfc\x79\xb2\x56\x44\x17\x5c\x62\xd8\x02\x69\xac\x9a\xda\x43\xcd\x8b\xd2\x62\x18\xc7\x64\x4a\x28\x8d\xe1\xbd\xe4\x96\x75\xd6\xc3\xdd\x28\xb1\x50\x85\x1a\x64\xde\x29\x4d\x99\x0e\x35\xa1\xbc\x31\x18\xfe\x18\x62\xe5\x42\x11\x8b\x41\xb0\xdc\x1e\xa1\xe2\xc8\x6f\x29\xbd\x8b\x2d\xab\x6a\x41\x2c\xeb\xb6\x15\x53\xde\xa6\xa7\xc0\x98\x87\x5d\xb6\xb3\xa9\x37\x97\x8c\x50\xa6\x01\x7b\x94\x04\xed\x77\x24\x7b\x2b\xb4\x6a\x24\xc5\xc1\xaf\xdb\xed\x36\x38\xa0\x71\x4c\x1f\x57\x31\xd9\x40\xa5\x28\x4b\x50\xa9\x34\xff\x5f\x49\x4b\x04\x02\x5b\xb2\x8a\x25\x88\x12\xfd\x86\x80\x64\x96\xb7\x2c\x94\xc4\x99\x9e\xd0\xc5\x24\x30\xcf\xe2\x33\x95\xcf\x90\x09\x62\x4c\x82\x06\x74\x21\xe8\x91\x3a\x72\x3b\x6e\x51\x1a\xc7\x96\x5b\xc1\xd2\x34\x8e\xca\xe7\x15\x3c\xca\xdb\x09\xa0\x24\xed\xc2\x16\xbd\x73\x34\x22\xf1\x6c\xee\xb6\x3f\xe1\x32\x3a\x92\x39\xe3\x78\x89\xfa\x7e\xc9\x70\xc7\x7e\xc9\x29\x0b\xad\xe6\x45\x31\x6c\x05\x94\xac\x13\x54\xf0\xb4\xdd\xb6\x65\xf0\x38\xa2\x2d\xcf\xf3\xc5\xde\x0c\xfb\xd3\x77\x43\x38\x18\xd4\x69\x3a\x41\x4e\xba\x08\xf0\xa8\x39\x05\xb3\xdf\xfd\xfb\x3f\xa4\x62\x08\xb0\xaa\x99\xf4\x4b\x26\x41\x2f\xc1\x53\xf0\xba\x92\xc8\x27\x3b\x0a\x0f\xda\x30\x57\x3a\x41\xdc\xb2\x0a\xb8\x04\x57\xc2\x5a\x5f\x27\x95\x86\x3e\xa6\x0d\x79\x9e\x20\xfb\x59\x33\x95\xdf\x3b\xcb\xc6\x34\xbb\x1f\x6e\xfd\x01\x92\x04\x82\x46\x52\x96\x73\xc9\x68\x80\x00\x77\x85\x7b\x2f\xf7\xf3\x42\x81\x83\x5c\x3c\x53\x12\xb0\xcb\xd0\x87\x3a\x03\x4a\x5d\xef\xdc\xaf\x1b\x30\xb4\x6a\x2c\xd3\xa1\xe0\xf2\x0d\xb0\x55\x9e\xba\xff\x9c\xed\x5f\x62\xcb\xfb\x53\x39\x0f\x08\x2c\x29\x12\x64\x6a\x22\x51\xba\xdf\xfb\x05\xaf\xce\xc3\x21\x8e\x06\x20\x57\xe8\x89\x06\xfc\x5c\x65\xd2\x34\x3b\xdf\xf6\x4b\x3c\xfe\x32\xe1\xf1\x78\x38\x6f\xd8\xfa\xa9\xcf\x46\x28\x9b\x20\xbf\x9b\x1b\xe2\xe0\x36\xea\xc7\x1c\x5d\xaf\x26\x1a\xcf\xbb\x2b\xd9\x87\x22\xf3\x22\x35\xcd\xce\x69\x74\xc4\xce\x49\x55\xa6\xd9\xdd\x2a\x2a\xb8\x2e\x8a\x23\xda\x54\x13\xce\xfe\x75\x49\xc0\x17\x65\x11\x9d\x74\x71\xe1\x08\x5f\x21\x73\x79\xe2\x9d\xe0\xf9\x6c\xe8\xc1\x70\xf0\x9d\x27\x5a\x4d\x28\xe5\xb2\xc0\x10\x6c\xe1\xf9\x5b\xfd\xe1\xff\xac\x4f\xb1\x9e\x93\x96\xb3\xf7\xf4\xc4\x90\x7f\x5b\xac\x63\xf1\x86\x5b\xb0\x4f\x6d\xfd\x98\x1f\x92\x10\x9b\x4c\xf3\xda\xa6\xdd\x4d\x5d\x29\xda\x08\xb6\x61\x1f\xb5\xd2\xd6\x40\x32\xb8\xad\x29\xb1\x04\x43\xde\xc8\xcc\x72\x25\xe1\xfe\x61\xb0\xe6\x1e\xcd\x6c\xa3\xe5\xc4\xe8\x9e\x28\x82\x4c\xc9\x9c\x17\x50\x08\xb5\x23\xc2\x4f\x4b\x10\xdc\xd8\x99\xab\x5b\xc1\x2f\x73\x08\xf7\xb8\xa3\x83\x21\xe0\xca\x84\x35\x53\xb5\x60\xc1\xe3\xa2\x9f\xd7\x19\x86\xe0\x6f\x26\x9b\x15\x97\xe3\x29\xc0\x2f\xab\x3a\x89\x22\x08\xc3\x30\x74\x20\x26\xfc\x4e\xa9\x7b\x09\x2f\x79\xff\xa5\x40\x2a\xeb\x08\xe4\xf9\xa7\xbb\x8e\xdc\x2b\x33\x10\xcc\x61\x82\x45\x9c\xd7\x99\xf5\xf0\xfa\x78\x77\x9d\x4d\x2f\x16\x33\xf3\xeb\xcc\x18\x56\xd8\xac\x89\xfb\xe8\x0b\x7e\x5f\x61\x48\x33\xca\x35\xcb\x2c\x86\xbd\x3b\xcf\x18\x82\x38\xa6\x2c\x27\x8d\xb0\x3f\x3c\x72\x9a\x06\xf3\xc9\x75\x98\x83\xf5\x3c\xfa\x11\x71\x81\xc8\x6b\x04\x4e\xe2\xe7\x0c\x8e\xd9\x3b\x97\x36\x28\x29\x53\x55\xdd\x58\x46\xf1\x44\xa3\xa3\x2f\x82\xb3\xc2\x67\x02\x3f\x73\xe3\x85\x6e\x4b\x6e\x36\xbf\x79\x32\xfc\xcc\x9b\xb3\xb1\x54\x44\xc5\x6c\xa9\xa8\x59\xa8\xe1\x34\x45\x07\x25\xf8\x59\xba\x50\x46\x4b\x74\xdf\x60\x48\xba\x42\x56\x54\x90\x2b\x0d\xf7\xce\x9b\xbb\x2b\xa0\x73\x5a\xdb\x17\xcf\x7d\x3e\xf7\xfd\xd1\x39\xbe\xf0\xd7\xcd\x5a\x05\x13\x32\xce\x01\x4e\x58\x8b\xde\x0b\x72\x99\x8b\xb6\x43\x0b\x82\xb5\x6e\x9e\xff\x15\xe8\xa7\xd6\xcf\x00\x00\x00\xff\xff\x99\xaa\x8c\x54\xe7\x0c\x00\x00")

func stub_layout_default_stub() ([]byte, error) {
	return bindata_read(
		_stub_layout_default_stub,
		"stub/layout/default.stub",
	)
}

var _stub_main_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xc1\x6a\xf3\x30\x10\x84\xcf\xda\xa7\xd8\x5f\xf0\x17\x1b\x4c\x28\x3d\x05\xe3\xe8\xd2\xb4\xf4\x58\x1a\x7a\x0e\xb2\xbd\x76\x45\x1d\xc9\xac\xe4\xf4\x10\xfc\xee\x45\x96\xd3\x64\x6f\x33\xdf\xcc\x22\xed\xa8\x9b\x6f\xdd\x13\x9e\xb4\xb1\x00\xe6\x34\x3a\x0e\x98\x81\x90\x55\x95\xc4\xb1\x71\x4c\x4a\x49\x10\x72\x70\xbd\x84\x1c\xa0\x9b\x6c\xb3\x14\xb2\x1c\x2f\x00\x82\xb0\xdc\x61\x8c\x6d\x5e\x6c\x6f\x2c\x5d\x40\x88\x67\x67\x3b\xd3\x97\xf8\xb0\xf8\x49\x45\x5f\xec\x75\xd0\xb5\xf6\x74\x45\xfb\xfa\x40\x61\x21\xe2\xcd\xf9\x50\x62\x1c\x59\x55\x6d\x7d\xfc\x72\x3e\x28\x25\x8b\x05\x7e\x7a\xe2\x7b\x38\x79\xe2\x3f\xf8\xae\xbd\xff\x71\xdc\x96\x2b\x1c\x57\x7d\x0b\x38\x5e\x57\x27\xee\x38\x28\x95\xd0\xed\x41\xa9\xdb\xae\xfa\xda\x9d\x0b\xc0\xbb\x39\x10\x9f\x89\xd3\xbe\xed\xe3\xf6\x29\x66\xe6\x02\xc4\x1c\x0f\xc1\x1c\x4f\x41\x9b\x8f\xc9\x66\x39\x08\xd3\x61\xb4\xfe\xed\xd0\x9a\x01\xe3\x27\x07\xd7\x6f\x5e\x75\xd0\x43\x97\xc9\xff\x67\x59\x44\x9e\xc7\xf2\x0c\xbf\x01\x00\x00\xff\xff\x84\x52\x8d\xe3\x8a\x01\x00\x00")

func stub_main_stub() ([]byte, error) {
	return bindata_read(
		_stub_main_stub,
		"stub/main.stub",
	)
}

var _stub_model_model_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func stub_model_model_stub() ([]byte, error) {
	return bindata_read(
		_stub_model_model_stub,
		"stub/model/model.stub",
	)
}

var _stub_route_route_stub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\xdb\x38\x10\x3d\x9b\xbf\x62\xa0\xc3\x42\x32\x64\xf1\x1e\x60\x2f\x1b\x6f\x90\x5c\x16\x81\x1d\xec\x02\x5b\x14\xb1\x2c\x8d\x24\x36\x32\xa9\x0e\x87\x55\xec\xc0\xff\xbd\x20\xa9\xf8\x23\x68\x0b\xd4\x07\x4b\xe4\x1b\xbe\xf7\x86\x7c\x94\x94\xb0\x1e\x0d\xd5\x30\xaa\xbe\x87\xaa\xc3\xea\x05\x54\x03\x64\x1c\x23\x34\xaa\x47\x50\x16\x2a\xc2\x92\xb1\xce\x3d\x82\xaf\xca\x86\xf7\x8b\x65\x3b\x53\xab\x66\x0f\x8a\x85\x94\xf0\xd0\xc0\xde\x38\x18\x4b\xcd\xc0\x06\x08\xa7\xd5\xc0\x1d\x46\xde\xdc\xe3\xb6\x33\xae\xaf\xa1\xc6\x1e\x19\x03\xe6\xd5\xf2\x52\x87\x42\x0d\xce\xe2\x24\xd1\xa2\x46\x2a\x19\xa1\x6c\x4b\xa5\x73\x30\x14\x04\xaa\x52\x43\x65\x86\x3d\x34\x64\x76\x81\x60\x63\xd9\x6d\x65\x90\x88\xff\x85\x9f\xd8\x04\x62\x21\xbc\xb7\xa5\x01\x6d\xf8\xdd\xaf\x5f\xa3\x0d\xa3\x85\xcd\x62\xb1\x58\xac\xfc\x92\xc5\x16\x5b\xa5\xfd\x70\xe3\x85\x2e\x00\xd4\xf5\xf5\xf4\xc3\x6e\x30\xc4\x61\x4e\x88\xa1\xac\x5e\xca\x76\x6a\x50\x08\x15\x30\x48\xc5\x2c\xd1\xc8\xb2\x63\x1e\x12\x31\x4b\x2a\xb3\x1b\x08\xad\x95\xed\x41\x0d\x89\x10\xb3\xa4\x55\xdc\xb9\x6d\x51\x99\x9d\xfc\xa2\xf4\xa1\x73\xb2\x35\xb4\x4b\xc4\x4c\x4a\xb8\x16\x11\x99\x10\xbc\x1f\x10\xda\xff\xd5\xf0\x1f\x29\x46\x02\xcb\xe4\x2a\x86\x37\x31\x6b\x0f\x30\xf7\xa4\x45\x44\xc4\xcc\x4b\x16\x2b\xb4\x83\xd1\x16\xa7\xc9\xa3\x10\x8d\xd3\x15\xa4\x0e\xe6\x67\x96\x0c\xc2\x33\x1d\xe0\xd3\xe7\xed\x9e\x31\x83\x54\x69\xce\x01\x89\x0c\x65\x9e\x9c\x90\x1d\x69\x70\x45\x7b\x28\xa6\xda\xec\x44\xb6\xc2\xd6\x27\x82\xd2\x7a\x0b\x73\x6f\xbe\x58\xfe\x95\x13\xea\x1a\x09\x7c\x41\x3a\x46\xaf\x3f\x30\x94\x03\xe1\x57\x87\x96\x61\x3e\xa1\x61\x94\x05\x51\x9f\x4c\x2e\x59\x55\xf1\xfc\x62\x43\xf7\xa5\xae\x7b\x4c\x13\xd9\x9a\x67\xeb\xd3\xf1\x3c\xb8\x6d\xaf\x2a\x99\xe4\x51\x60\xcd\xa4\x86\x47\xc2\x46\xbd\xfe\xa2\xea\x4e\xf5\xb8\x46\xfa\x86\x94\x86\xf1\x52\x51\x9a\x10\x5a\xe3\xa8\x42\x59\x2b\xcb\x49\x96\x65\x99\x08\x2e\x96\xd8\x94\xae\x67\x50\xba\xc6\xd7\xa2\xe3\x5d\x2f\x00\x00\x2e\xfc\xdc\xf9\x36\x13\xcf\x1e\x1b\xfe\x49\xaf\x1f\xba\x84\x37\x11\x88\xfc\x4f\xca\x8b\x5e\xa7\x10\xbd\x63\x5d\xd0\x80\x9b\x3f\x7f\xc3\xfb\x69\xf1\x58\xdc\x63\x59\x23\xa5\x59\xb1\x46\x4e\x93\x5b\xa3\x19\x35\x2f\xfe\xd6\x95\xa9\x95\x6e\x93\x1c\x92\x10\xc6\xec\x6c\xa6\x3d\x78\xb1\x90\xa6\x7f\x70\x8c\xf6\xd3\xf1\xcc\xa9\xdf\x27\x7d\xd9\x1f\xe7\x20\xbd\x9d\x2a\x22\xcb\x0d\x5c\x8f\xf3\x2b\xfc\x7a\x7b\x6e\x60\x3c\xc3\xc7\xb3\x97\x1a\x1b\x24\x68\x0f\xc5\x6d\x6f\x2c\xa6\x17\x2e\xe3\xb6\x14\x61\x2b\xee\x9f\x9e\x1e\xd3\x93\xad\x1c\x28\x9a\x3d\x4e\x27\xb8\x8a\x69\xfc\xd7\x21\xf8\xe3\x03\x7f\x0d\x8d\x46\xcd\x57\xa9\x9a\x4e\x31\x46\x37\xf1\xd9\xf4\x2f\x99\x88\x92\xd3\x7d\xfc\xf0\x91\x10\xa7\x8b\x7a\xf5\x91\x10\x47\xf1\x3d\x00\x00\xff\xff\x67\x3a\x78\x50\x59\x05\x00\x00")

func stub_route_route_stub() ([]byte, error) {
	return bindata_read(
		_stub_route_route_stub,
		"stub/route/route.stub",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"stub/controller/controller.stub":  stub_controller_controller_stub,
	"stub/core/core.stub":              stub_core_core_stub,
	"stub/core/response/response.stub": stub_core_response_response_stub,
	"stub/go.mod.stub":                 stub_go_mod_stub,
	"stub/html/create.stub":            stub_html_create_stub,
	"stub/html/detail.stub":            stub_html_detail_stub,
	"stub/html/edit.stub":              stub_html_edit_stub,
	"stub/html/list.stub":              stub_html_list_stub,
	"stub/layout/default.stub":         stub_layout_default_stub,
	"stub/main.stub":                   stub_main_stub,
	"stub/model/model.stub":            stub_model_model_stub,
	"stub/route/route.stub":            stub_route_route_stub,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"stub": &_bintree_t{nil, map[string]*_bintree_t{
		"controller": &_bintree_t{nil, map[string]*_bintree_t{
			"controller.stub": &_bintree_t{stub_controller_controller_stub, map[string]*_bintree_t{}},
		}},
		"core": &_bintree_t{nil, map[string]*_bintree_t{
			"core.stub": &_bintree_t{stub_core_core_stub, map[string]*_bintree_t{}},
			"response": &_bintree_t{nil, map[string]*_bintree_t{
				"response.stub": &_bintree_t{stub_core_response_response_stub, map[string]*_bintree_t{}},
			}},
		}},
		"go.mod.stub": &_bintree_t{stub_go_mod_stub, map[string]*_bintree_t{}},
		"html": &_bintree_t{nil, map[string]*_bintree_t{
			"create.stub": &_bintree_t{stub_html_create_stub, map[string]*_bintree_t{}},
			"detail.stub": &_bintree_t{stub_html_detail_stub, map[string]*_bintree_t{}},
			"edit.stub":   &_bintree_t{stub_html_edit_stub, map[string]*_bintree_t{}},
			"list.stub":   &_bintree_t{stub_html_list_stub, map[string]*_bintree_t{}},
		}},
		"layout": &_bintree_t{nil, map[string]*_bintree_t{
			"default.stub": &_bintree_t{stub_layout_default_stub, map[string]*_bintree_t{}},
		}},
		"main.stub": &_bintree_t{stub_main_stub, map[string]*_bintree_t{}},
		"model": &_bintree_t{nil, map[string]*_bintree_t{
			"model.stub": &_bintree_t{stub_model_model_stub, map[string]*_bintree_t{}},
		}},
		"route": &_bintree_t{nil, map[string]*_bintree_t{
			"route.stub": &_bintree_t{stub_route_route_stub, map[string]*_bintree_t{}},
		}},
	}},
}}
