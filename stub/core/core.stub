package core

import (
	"<<import_route>>"
	"net/http"

	_ "github.com/go-sql-driver/mysql"
	"github.com/jinzhu/gorm"
)

type Engine struct {
	Db *gorm.DB
}

func (e *Engine) Load() (err error) {
	// Open db
	e.Db, err = gorm.Open("mysql", "root:123456@/goadmin?charset=utf8&parseTime=True&loc=Local")
	if err != nil {
		return
	}

	// Register route
	route.Register(e.Db)

	return nil
}

func (e *Engine) Run() (err error) {
	err = e.Load()
	if err != nil {
		return
	}

	err = http.ListenAndServe(":8082", nil)
	return
}


func (e *Engine) Render(writer http.ResponseWriter, request *http.Request) {
	defer func() {
		if err := recover(); err != nil {
			log.Printf("panic %v", err)
		}
	}()
	// 解析参数，映射到文件
	err := request.ParseForm()
	if err != nil {
		panic(err.Error())
	}

	path := request.FormValue("path")

	//log.Println("%v", path)
	if path == "" {
		panic("lose path param")
	}

	// 从view目录中寻找文件
	body := e.readFile("view" + path + ".html")

	// body, err := view.Asset("view" + path + ".html")

	_, err = writer.Write(body)

	if err != nil {
		panic(err.Error())
	}
}

func (e *Engine) readFile(path string) []byte {
	body, err := ioutil.ReadFile(path)
	if err != nil {
		panic(err.Error())
	}

	return body
}
